{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91809\\\\Desktop\\\\vivek9patel.github.io-master\\\\vivek9patel.github.io-master\\\\src\\\\components\\\\apps\\\\gedit.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport ReactGA from 'react-ga';\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Gedit extends Component {\n  constructor() {\n    super();\n\n    this.sendMessage = async () => {\n      let name = $(\"#sender-name\").val();\n      let subject = $(\"#sender-subject\").val();\n      let message = $(\"#sender-message\").val();\n      name = name.trim();\n      subject = subject.trim();\n      message = message.trim();\n      let error = false;\n\n      if (name.length === 0) {\n        $(\"#sender-name\").val('');\n        $(\"#sender-name\").attr(\"placeholder\", \"Name must not be Empty!\");\n        error = true;\n      }\n\n      if (message.length === 0) {\n        $(\"#sender-message\").val('');\n        $(\"#sender-message\").attr(\"placeholder\", \"Message must not be Empty!\");\n        error = true;\n      }\n\n      if (error) return;\n      this.setState({\n        sending: true\n      });\n      const serviceID = process.env.REACT_APP_SERVICE_ID;\n      const templateID = process.env.REACT_APP_TEMPLATE_ID;\n      const templateParams = {\n        'name': name,\n        'subject': subject,\n        'message': message\n      };\n      emailjs.send(serviceID, templateID, templateParams).then(() => {\n        this.setState({\n          sending: false\n        });\n        $(\"#close-gedit\").trigger(\"click\");\n      }).catch(() => {\n        this.setState({\n          sending: false\n        });\n        $(\"#close-gedit\").trigger(\"click\");\n      });\n      ReactGA.event({\n        category: \"Send Message\",\n        action: `${name}, ${subject}, ${message}`\n      });\n    };\n\n    this.state = {\n      sending: false\n    };\n  }\n\n  componentDidMount() {\n    emailjs.init(process.env.REACT_APP_USER_ID);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full relative flex flex-col bg-ub-cool-grey text-white select-none\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between w-full bg-ub-gedit-light bg-opacity-60 border-b border-t border-blue-400 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold ml-2\",\n          children: \"Send a Message to Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: this.sendMessage,\n            className: \"border border-black bg-black bg-opacity-50 px-3 py-0.5 my-1 mx-1 rounded hover:bg-opacity-80\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex-grow flex flex-col bg-ub-gedit-dark font-normal windowMainScreen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute left-0 top-0 h-full px-2 bg-ub-gedit-darker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"sender-name\",\n            className: \" w-full text-ubt-gedit-orange focus:bg-ub-gedit-light outline-none font-medium text-sm pl-6 py-0.5 bg-transparent\",\n            placeholder: \"Your Email / Name :\",\n            spellCheck: \"false\",\n            autoComplete: \"off\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute left-1 top-1/2 transform -translate-y-1/2 font-bold light text-sm text-ubt-gedit-blue\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"sender-subject\",\n            className: \" w-full my-1 text-ubt-gedit-blue focus:bg-ub-gedit-light gedit-subject outline-none text-sm font-normal pl-6 py-0.5 bg-transparent\",\n            placeholder: \"subject (may be a feedback for this website!)\",\n            spellCheck: \"false\",\n            autoComplete: \"off\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute left-1 top-1/2 transform -translate-y-1/2 font-bold  text-sm text-ubt-gedit-blue\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative flex-grow\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"sender-message\",\n            className: \" w-full gedit-message font-light text-sm resize-none h-full windowMainScreen outline-none tracking-wider pl-6 py-1 bg-transparent\",\n            placeholder: \"Message\",\n            spellCheck: \"false\",\n            autoComplete: \"none\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute left-1 top-1 font-bold  text-sm text-ubt-gedit-blue\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), this.state.sending ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center animate-pulse h-full w-full bg-gray-400 bg-opacity-30 absolute top-0 left-0\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \" w-8 absolute animate-spin\",\n          src: \"./themes/Yaru/status/process-working-symbolic.svg\",\n          alt: \"Ubuntu Process Symbol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Gedit;\nexport const displayGedit = () => {\n  return /*#__PURE__*/_jsxDEV(Gedit, {\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 12\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/91809/Desktop/vivek9patel.github.io-master/vivek9patel.github.io-master/src/components/apps/gedit.js"],"names":["React","Component","$","ReactGA","emailjs","Gedit","constructor","sendMessage","name","val","subject","message","trim","error","length","attr","setState","sending","serviceID","process","env","REACT_APP_SERVICE_ID","templateID","REACT_APP_TEMPLATE_ID","templateParams","send","then","trigger","catch","event","category","action","state","componentDidMount","init","REACT_APP_USER_ID","render","displayGedit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,OAAO,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAEjCK,EAAAA,WAAW,GAAG;AACV;;AADU,SAWdC,WAXc,GAWA,YAAY;AACtB,UAAIC,IAAI,GAAGN,CAAC,CAAC,cAAD,CAAD,CAAkBO,GAAlB,EAAX;AACA,UAAIC,OAAO,GAAGR,CAAC,CAAC,iBAAD,CAAD,CAAqBO,GAArB,EAAd;AACA,UAAIE,OAAO,GAAGT,CAAC,CAAC,iBAAD,CAAD,CAAqBO,GAArB,EAAd;AAEAD,MAAAA,IAAI,GAAGA,IAAI,CAACI,IAAL,EAAP;AACAF,MAAAA,OAAO,GAAGA,OAAO,CAACE,IAAR,EAAV;AACAD,MAAAA,OAAO,GAAGA,OAAO,CAACC,IAAR,EAAV;AAEA,UAAIC,KAAK,GAAG,KAAZ;;AAEA,UAAIL,IAAI,CAACM,MAAL,KAAgB,CAApB,EAAuB;AACnBZ,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBO,GAAlB,CAAsB,EAAtB;AACAP,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBa,IAAlB,CAAuB,aAAvB,EAAsC,yBAAtC;AACAF,QAAAA,KAAK,GAAG,IAAR;AACH;;AAED,UAAIF,OAAO,CAACG,MAAR,KAAmB,CAAvB,EAA0B;AACtBZ,QAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBO,GAArB,CAAyB,EAAzB;AACAP,QAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBa,IAArB,CAA0B,aAA1B,EAAyC,4BAAzC;AACAF,QAAAA,KAAK,GAAG,IAAR;AACH;;AACD,UAAIA,KAAJ,EAAW;AAEX,WAAKG,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AAEA,YAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA9B;AACA,YAAMC,UAAU,GAAGH,OAAO,CAACC,GAAR,CAAYG,qBAA/B;AACA,YAAMC,cAAc,GAAG;AACnB,gBAAQhB,IADW;AAEnB,mBAAWE,OAFQ;AAGnB,mBAAWC;AAHQ,OAAvB;AAMAP,MAAAA,OAAO,CAACqB,IAAR,CAAaP,SAAb,EAAwBI,UAAxB,EAAoCE,cAApC,EAAoDE,IAApD,CAAyD,MAAM;AAC3D,aAAKV,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACAf,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkByB,OAAlB,CAA0B,OAA1B;AACH,OAHD,EAGGC,KAHH,CAGS,MAAM;AACX,aAAKZ,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACAf,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkByB,OAAlB,CAA0B,OAA1B;AACH,OAND;AAQAxB,MAAAA,OAAO,CAAC0B,KAAR,CAAc;AACVC,QAAAA,QAAQ,EAAE,cADA;AAEVC,QAAAA,MAAM,EAAG,GAAEvB,IAAK,KAAIE,OAAQ,KAAIC,OAAQ;AAF9B,OAAd;AAKH,KA1Da;;AAEV,SAAKqB,KAAL,GAAa;AACTf,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAEDgB,EAAAA,iBAAiB,GAAG;AAChB7B,IAAAA,OAAO,CAAC8B,IAAR,CAAaf,OAAO,CAACC,GAAR,CAAYe,iBAAzB;AACH;;AAmDDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,6EAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oHAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACI;AAAK,YAAA,OAAO,EAAE,KAAK7B,WAAnB;AAAgC,YAAA,SAAS,EAAC,8FAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,gFAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACI;AAAO,YAAA,EAAE,EAAC,aAAV;AAAwB,YAAA,SAAS,EAAC,mHAAlC;AAAsJ,YAAA,WAAW,EAAC,qBAAlK;AAAwL,YAAA,UAAU,EAAC,OAAnM;AAA2M,YAAA,YAAY,EAAC,KAAxN;AAA8N,YAAA,IAAI,EAAC;AAAnO;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,SAAS,EAAC,gGAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACI;AAAO,YAAA,EAAE,EAAC,gBAAV;AAA2B,YAAA,SAAS,EAAC,oIAArC;AAA0K,YAAA,WAAW,EAAC,+CAAtL;AAAsO,YAAA,UAAU,EAAC,OAAjP;AAAyP,YAAA,YAAY,EAAC,KAAtQ;AAA4Q,YAAA,IAAI,EAAC;AAAjR;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,SAAS,EAAC,2FAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAUI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACI;AAAU,YAAA,EAAE,EAAC,gBAAb;AAA8B,YAAA,SAAS,EAAC,mIAAxC;AAA4K,YAAA,WAAW,EAAC,SAAxL;AAAkM,YAAA,UAAU,EAAC,OAA7M;AAAqN,YAAA,YAAY,EAAC,MAAlO;AAAyO,YAAA,IAAI,EAAC;AAA9O;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,SAAS,EAAC,8DAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,EAuBS,KAAKyB,KAAL,CAAWf,OAAX,gBAEG;AAAK,QAAA,SAAS,EAAC,8GAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAE,4BAAhB;AAA8C,UAAA,GAAG,EAAC,mDAAlD;AAAsG,UAAA,GAAG,EAAC;AAA1G;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFH,GAKK,IA5Bd;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkCH;;AAjGgC;AAoGrC,eAAeZ,KAAf;AAEA,OAAO,MAAMgC,YAAY,GAAG,MAAM;AAC9B,sBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAFM","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport ReactGA from 'react-ga';\nimport emailjs from 'emailjs-com';\n\nexport class Gedit extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            sending: false,\n        }\n    }\n\n    componentDidMount() {\n        emailjs.init(process.env.REACT_APP_USER_ID);\n    }\n\n    sendMessage = async () => {\n        let name = $(\"#sender-name\").val();\n        let subject = $(\"#sender-subject\").val();\n        let message = $(\"#sender-message\").val();\n\n        name = name.trim();\n        subject = subject.trim();\n        message = message.trim();\n\n        let error = false;\n\n        if (name.length === 0) {\n            $(\"#sender-name\").val('');\n            $(\"#sender-name\").attr(\"placeholder\", \"Name must not be Empty!\");\n            error = true;\n        }\n\n        if (message.length === 0) {\n            $(\"#sender-message\").val('');\n            $(\"#sender-message\").attr(\"placeholder\", \"Message must not be Empty!\");\n            error = true;\n        }\n        if (error) return;\n\n        this.setState({ sending: true });\n\n        const serviceID = process.env.REACT_APP_SERVICE_ID;\n        const templateID = process.env.REACT_APP_TEMPLATE_ID;\n        const templateParams = {\n            'name': name,\n            'subject': subject,\n            'message': message,\n        }\n\n        emailjs.send(serviceID, templateID, templateParams).then(() => {\n            this.setState({ sending: false });\n            $(\"#close-gedit\").trigger(\"click\");\n        }).catch(() => {\n            this.setState({ sending: false });\n            $(\"#close-gedit\").trigger(\"click\");\n        })\n\n        ReactGA.event({\n            category: \"Send Message\",\n            action: `${name}, ${subject}, ${message}`\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"w-full h-full relative flex flex-col bg-ub-cool-grey text-white select-none\">\n                <div className=\"flex items-center justify-between w-full bg-ub-gedit-light bg-opacity-60 border-b border-t border-blue-400 text-sm\">\n                    <span className=\"font-bold ml-2\">Send a Message to Me</span>\n                    <div className=\"flex\">\n                        <div onClick={this.sendMessage} className=\"border border-black bg-black bg-opacity-50 px-3 py-0.5 my-1 mx-1 rounded hover:bg-opacity-80\">Send</div>\n                    </div>\n                </div>\n                <div className=\"relative flex-grow flex flex-col bg-ub-gedit-dark font-normal windowMainScreen\">\n                    <div className=\"absolute left-0 top-0 h-full px-2 bg-ub-gedit-darker\"></div>\n                    <div className=\"relative\">\n                        <input id=\"sender-name\" className=\" w-full text-ubt-gedit-orange focus:bg-ub-gedit-light outline-none font-medium text-sm pl-6 py-0.5 bg-transparent\" placeholder=\"Your Email / Name :\" spellCheck=\"false\" autoComplete=\"off\" type=\"text\" />\n                        <span className=\"absolute left-1 top-1/2 transform -translate-y-1/2 font-bold light text-sm text-ubt-gedit-blue\">1</span>\n                    </div>\n                    <div className=\"relative\">\n                        <input id=\"sender-subject\" className=\" w-full my-1 text-ubt-gedit-blue focus:bg-ub-gedit-light gedit-subject outline-none text-sm font-normal pl-6 py-0.5 bg-transparent\" placeholder=\"subject (may be a feedback for this website!)\" spellCheck=\"false\" autoComplete=\"off\" type=\"text\" />\n                        <span className=\"absolute left-1 top-1/2 transform -translate-y-1/2 font-bold  text-sm text-ubt-gedit-blue\">2</span>\n                    </div>\n                    <div className=\"relative flex-grow\">\n                        <textarea id=\"sender-message\" className=\" w-full gedit-message font-light text-sm resize-none h-full windowMainScreen outline-none tracking-wider pl-6 py-1 bg-transparent\" placeholder=\"Message\" spellCheck=\"false\" autoComplete=\"none\" type=\"text\" />\n                        <span className=\"absolute left-1 top-1 font-bold  text-sm text-ubt-gedit-blue\">3</span>\n                    </div>\n                </div>\n                {\n                    (this.state.sending\n                        ?\n                        <div className=\"flex justify-center items-center animate-pulse h-full w-full bg-gray-400 bg-opacity-30 absolute top-0 left-0\">\n                            <img className={\" w-8 absolute animate-spin\"} src=\"./themes/Yaru/status/process-working-symbolic.svg\" alt=\"Ubuntu Process Symbol\" />\n                        </div>\n                        : null\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default Gedit;\n\nexport const displayGedit = () => {\n    return <Gedit> </Gedit>;\n}"]},"metadata":{},"sourceType":"module"}