{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91809\\\\Desktop\\\\vivek9patel.github.io-master\\\\vivek9patel.github.io-master\\\\src\\\\components\\\\apps\\\\terminal.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport ReactGA from 'react-ga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Terminal extends Component {\n  constructor() {\n    super();\n\n    this.reStartTerminal = () => {\n      clearInterval(this.cursor);\n      $('#terminal-body').empty();\n      this.appendTerminalRow();\n    };\n\n    this.appendTerminalRow = () => {\n      let terminal = this.state.terminal;\n      terminal.push(this.terminalRow(this.terminal_rows));\n      this.setState({\n        terminal\n      });\n      this.terminal_rows += 2;\n    };\n\n    this.terminalRow = id => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex w-full h-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" text-ubt-green\",\n              children: \"vivek@Dell\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-white mx-px font-medium\",\n              children: \":\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" text-ubt-blue\",\n              children: this.current_directory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-white mx-px font-medium mr-1\",\n              children: \"$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"cmd\",\n            onClick: this.focusCursor,\n            className: \" bg-transperent relative flex-1 overflow-hidden\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: `show-${id}`,\n              className: \" float-left whitespace-pre pb-1 opacity-100 font-normal tracking-wider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: `cursor-${id}`,\n              className: \" float-left mt-1 w-1.5 h-3.5 bg-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: `terminal-input-${id}`,\n              \"data-row-id\": id,\n              onKeyDown: this.checkKey,\n              onBlur: this.unFocusCursor,\n              className: \" absolute top-0 left-0 w-full opacity-0 outline-none bg-transparent\",\n              spellCheck: false,\n              autoFocus: true,\n              autoComplete: \"off\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `row-result-${id}`,\n          className: \"my-2 font-normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.focusCursor = e => {\n      clearInterval(this.cursor);\n      this.startCursor($(e.target).data(\"row-id\"));\n    };\n\n    this.unFocusCursor = e => {\n      this.stopCursor($(e.target).data(\"row-id\"));\n    };\n\n    this.startCursor = id => {\n      clearInterval(this.cursor);\n      $(`input#terminal-input-${id}`).trigger(\"focus\"); // On input change, set current text in span\n\n      $(`input#terminal-input-${id}`).on(\"input\", function () {\n        $(`#cmd span#show-${id}`).text($(this).val());\n      });\n      this.cursor = window.setInterval(function () {\n        if ($(`#cursor-${id}`).css('visibility') === 'visible') {\n          $(`#cursor-${id}`).css({\n            visibility: 'hidden'\n          });\n        } else {\n          $(`#cursor-${id}`).css({\n            visibility: 'visible'\n          });\n        }\n      }, 500);\n    };\n\n    this.stopCursor = id => {\n      clearInterval(this.cursor);\n      $(`#cursor-${id}`).css({\n        visibility: 'visible'\n      });\n    };\n\n    this.removeCursor = id => {\n      this.stopCursor(id);\n      $(`#cursor-${id}`).css({\n        display: 'none'\n      });\n    };\n\n    this.clearInput = id => {\n      $(`input#terminal-input-${id}`).trigger(\"blur\");\n    };\n\n    this.checkKey = e => {\n      if (e.key === \"Enter\") {\n        let terminal_row_id = $(e.target).data(\"row-id\");\n        let command = $(`input#terminal-input-${terminal_row_id}`).val().trim();\n\n        if (command.length !== 0) {\n          this.removeCursor(terminal_row_id);\n          this.handleCommands(command, terminal_row_id);\n        } // push to history\n\n\n        this.prev_commands.push(command);\n        this.commands_index = this.prev_commands.length - 1;\n        this.clearInput(terminal_row_id);\n      } else if (e.key === \"ArrowUp\") {\n        let prev_command;\n        if (this.commands_index <= -1) prev_command = \"\";else prev_command = this.prev_commands[this.commands_index];\n        let terminal_row_id = $(e.target).data(\"row-id\");\n        $(`input#terminal-input-${terminal_row_id}`).val(prev_command);\n        $(`#show-${terminal_row_id}`).text(prev_command);\n        this.commands_index--;\n      } else if (e.key === \"ArrowDown\") {\n        let prev_command;\n        if (this.commands_index >= this.prev_commands.length) return;\n        if (this.commands_index <= -1) this.commands_index = 0;\n        if (this.commands_index === this.prev_commands.length) prev_command = \"\";else prev_command = this.prev_commands[this.commands_index];\n        let terminal_row_id = $(e.target).data(\"row-id\");\n        $(`input#terminal-input-${terminal_row_id}`).val(prev_command);\n        $(`#show-${terminal_row_id}`).text(prev_command);\n        this.commands_index++;\n      }\n    };\n\n    this.childDirectories = parent => {\n      let files = [];\n      files.push(`<div class=\"flex justify-start flex-wrap\">`);\n      this.child_directories[parent].forEach(file => {\n        files.push(`<span class=\"font-bold mr-2 text-ubt-blue\">'${file}'</span>`);\n      });\n      files.push(`</div>`);\n      return files;\n    };\n\n    this.closeTerminal = () => {\n      $(\"#close-terminal\").trigger('click');\n    };\n\n    this.handleCommands = (command, rowId) => {\n      let words = command.split(' ');\n      let main = words[0];\n      words.shift();\n      let result = \"\";\n      let rest = words.join(\" \");\n      rest = rest.trim();\n\n      switch (main) {\n        case \"cd\":\n          if (words.length === 0 || rest === \"\") {\n            this.current_directory = \"~\";\n            this.curr_dir_name = \"root\";\n            break;\n          }\n\n          if (words.length > 1) {\n            result = \"too many arguments, arguments must me <1.\";\n            break;\n          }\n\n          if (rest === \"personal-documents\") {\n            result = `bash /${this.curr_dir_name} : Permission denied 😏`;\n            break;\n          }\n\n          if (this.child_directories[this.curr_dir_name].includes(rest)) {\n            this.current_directory += \"/\" + rest;\n            this.curr_dir_name = rest;\n          } else if (rest === \"..\" || rest === \"../\") {\n            result = \"Type 'cd' to go back 😅\";\n            break;\n          } else {\n            result = `bash: cd: ${words}: No such file or directory`;\n          }\n\n          break;\n\n        case \"ls\":\n          let target = words[0];\n          if (target === \"\" || target === undefined || target === null) target = this.curr_dir_name;\n\n          if (words.length > 1) {\n            result = \"too many arguments, arguments must me <1.\";\n            break;\n          }\n\n          if (target in this.child_directories) {\n            result = this.childDirectories(target).join(\"\");\n          } else if (target === \"personal-documents\") {\n            result = \"Nope! 🙃\";\n            break;\n          } else {\n            result = `ls: cannot access '${words}': No such file or directory                    `;\n          }\n\n          break;\n\n        case \"echo\":\n          result = words.join(\" \");\n          break;\n\n        case \"clear\":\n          this.reStartTerminal();\n          return;\n\n        case \"exit\":\n          this.closeTerminal();\n          return;\n\n        case \"sudo\":\n          ReactGA.event({\n            category: \"Sudo Access\",\n            action: \"lol\"\n          });\n          result = \"<img class=' w-2/5' src='./images/memes/used-sudo-command.jpg' />\";\n          break;\n\n        default:\n          result = \"Command '\" + main + \"' not found, or not yet implemented.<br>Available Commands: [ cd, ls, echo, clear, exit ]\";\n      }\n\n      document.getElementById(`row-result-${rowId}`).innerHTML = result;\n      this.appendTerminalRow();\n    };\n\n    this.cursor = \"\";\n    this.terminal_rows = 1;\n    this.current_directory = \"~\";\n    this.curr_dir_name = \"root\";\n    this.prev_commands = [];\n    this.commands_index = -1;\n    this.child_directories = {\n      root: [\"books\", \"projects\", \"personal-documents\", \"skills\", \"languages\", \"PDPU\", \"interests\"],\n      PDPU: [\"Sem-6\"],\n      books: [\"Eric-Jorgenson_The-Almanack-of-Naval-Ravikant.pdf\", \"Elon Musk: How the Billionaire CEO of SpaceX.pdf\", \"The $100 Startup_CHRIS_GUILLEBEAU.pdf\", \"The_Magic_of_Thinking_Big.pdf\"],\n      skills: [\"Front-end development\", \"React.js\", \"jQuery\", \"Flutter\", \"Express.js\", \"SQL\", \"Firebase\"],\n      projects: [\"vivek9patel-personal-portfolio\", \"synonyms-list-react\", \"economist.com-unlocked\", \"Improve-Codeforces\", \"flutter-banking-app\", \"Meditech-Healthcare\", \"CPU-Scheduling-APP-React-Native\"],\n      interests: [\"Software Engineering\", \"Deep Learning\", \"Computer Vision\"],\n      languages: [\"Javascript\", \"C++\", \"Java\", \"Dart\"]\n    };\n    this.state = {\n      terminal: []\n    };\n  }\n\n  componentDidMount() {\n    this.reStartTerminal();\n  }\n\n  componentDidUpdate() {\n    clearInterval(this.cursor);\n    this.startCursor(this.terminal_rows - 2);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.cursor);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-full w-full bg-ub-drk-abrgn text-white text-sm font-bold\",\n      id: \"terminal-body\",\n      children: this.state.terminal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Terminal;\nexport const displayTerminal = () => {\n  return /*#__PURE__*/_jsxDEV(Terminal, {\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 12\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/91809/Desktop/vivek9patel.github.io-master/vivek9patel.github.io-master/src/components/apps/terminal.js"],"names":["React","Component","$","ReactGA","Terminal","constructor","reStartTerminal","clearInterval","cursor","empty","appendTerminalRow","terminal","state","push","terminalRow","terminal_rows","setState","id","current_directory","focusCursor","checkKey","unFocusCursor","e","startCursor","target","data","stopCursor","trigger","on","text","val","window","setInterval","css","visibility","removeCursor","display","clearInput","key","terminal_row_id","command","trim","length","handleCommands","prev_commands","commands_index","prev_command","childDirectories","parent","files","child_directories","forEach","file","closeTerminal","rowId","words","split","main","shift","result","rest","join","curr_dir_name","includes","undefined","event","category","action","document","getElementById","innerHTML","root","PDPU","books","skills","projects","interests","languages","componentDidMount","componentDidUpdate","componentWillUnmount","render","displayTerminal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport $ from 'jquery';\nimport ReactGA from 'react-ga';\n\nexport class Terminal extends Component {\n    constructor() {\n        super();\n        this.cursor = \"\";\n        this.terminal_rows = 1;\n        this.current_directory = \"~\";\n        this.curr_dir_name = \"root\";\n        this.prev_commands = [];\n        this.commands_index = -1;\n        this.child_directories = {\n            root: [\"books\", \"projects\", \"personal-documents\", \"skills\", \"languages\", \"PDPU\", \"interests\"],\n            PDPU: [\"Sem-6\"],\n            books: [\"Eric-Jorgenson_The-Almanack-of-Naval-Ravikant.pdf\", \"Elon Musk: How the Billionaire CEO of SpaceX.pdf\", \"The $100 Startup_CHRIS_GUILLEBEAU.pdf\", \"The_Magic_of_Thinking_Big.pdf\"],\n            skills: [\"Front-end development\", \"React.js\", \"jQuery\", \"Flutter\", \"Express.js\", \"SQL\", \"Firebase\"],\n            projects: [\"vivek9patel-personal-portfolio\", \"synonyms-list-react\", \"economist.com-unlocked\", \"Improve-Codeforces\", \"flutter-banking-app\", \"Meditech-Healthcare\", \"CPU-Scheduling-APP-React-Native\"],\n            interests: [\"Software Engineering\", \"Deep Learning\", \"Computer Vision\"],\n            languages: [\"Javascript\", \"C++\", \"Java\", \"Dart\"],\n        };\n        this.state = {\n            terminal: [],\n        }\n    }\n\n    componentDidMount() {\n        this.reStartTerminal();\n    }\n\n    componentDidUpdate() {\n        clearInterval(this.cursor);\n        this.startCursor(this.terminal_rows - 2);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.cursor);\n    }\n\n    reStartTerminal = () => {\n        clearInterval(this.cursor);\n        $('#terminal-body').empty();\n        this.appendTerminalRow();\n    }\n\n    appendTerminalRow = () => {\n        let terminal = this.state.terminal;\n        terminal.push(this.terminalRow(this.terminal_rows));\n        this.setState({ terminal });\n        this.terminal_rows += 2;\n    }\n\n    terminalRow = (id) => {\n        return (\n            <React.Fragment key={id}>\n                <div className=\"flex w-full h-5\">\n                    <div className=\"flex\">\n                        <div className=\" text-ubt-green\">vivek@Dell</div>\n                        <div className=\"text-white mx-px font-medium\">:</div>\n                        <div className=\" text-ubt-blue\">{this.current_directory}</div>\n                        <div className=\"text-white mx-px font-medium mr-1\">$</div>\n                    </div>\n                    <div id=\"cmd\" onClick={this.focusCursor} className=\" bg-transperent relative flex-1 overflow-hidden\">\n                        <span id={`show-${id}`} className=\" float-left whitespace-pre pb-1 opacity-100 font-normal tracking-wider\"></span>\n                        <div id={`cursor-${id}`} className=\" float-left mt-1 w-1.5 h-3.5 bg-white\"></div>\n                        <input id={`terminal-input-${id}`} data-row-id={id} onKeyDown={this.checkKey} onBlur={this.unFocusCursor} className=\" absolute top-0 left-0 w-full opacity-0 outline-none bg-transparent\" spellCheck={false} autoFocus={true} autoComplete=\"off\" type=\"text\" />\n                    </div>\n                </div>\n                <div id={`row-result-${id}`} className={\"my-2 font-normal\"}></div>\n            </React.Fragment>\n        );\n\n    }\n\n    focusCursor = (e) => {\n        clearInterval(this.cursor);\n        this.startCursor($(e.target).data(\"row-id\"));\n    }\n\n    unFocusCursor = (e) => {\n        this.stopCursor($(e.target).data(\"row-id\"));\n    }\n\n    startCursor = (id) => {\n        clearInterval(this.cursor);\n        $(`input#terminal-input-${id}`).trigger(\"focus\");\n        // On input change, set current text in span\n        $(`input#terminal-input-${id}`).on(\"input\", function () {\n            $(`#cmd span#show-${id}`).text($(this).val());\n        });\n        this.cursor = window.setInterval(function () {\n            if ($(`#cursor-${id}`).css('visibility') === 'visible') {\n                $(`#cursor-${id}`).css({ visibility: 'hidden' });\n            } else {\n                $(`#cursor-${id}`).css({ visibility: 'visible' });\n            }\n        }, 500);\n    }\n\n    stopCursor = (id) => {\n        clearInterval(this.cursor);\n        $(`#cursor-${id}`).css({ visibility: 'visible' });\n    }\n\n    removeCursor = (id) => {\n        this.stopCursor(id);\n        $(`#cursor-${id}`).css({ display: 'none' });\n    }\n\n    clearInput = (id) => {\n        $(`input#terminal-input-${id}`).trigger(\"blur\");\n    }\n\n    checkKey = (e) => {\n        if (e.key === \"Enter\") {\n            let terminal_row_id = $(e.target).data(\"row-id\");\n            let command = $(`input#terminal-input-${terminal_row_id}`).val().trim();\n            if (command.length !== 0) {\n                this.removeCursor(terminal_row_id);\n                this.handleCommands(command, terminal_row_id);\n            }\n            // push to history\n            this.prev_commands.push(command);\n            this.commands_index = this.prev_commands.length - 1;\n\n            this.clearInput(terminal_row_id);\n        }\n        else if (e.key === \"ArrowUp\") {\n            let prev_command;\n\n            if (this.commands_index <= -1) prev_command = \"\";\n            else prev_command = this.prev_commands[this.commands_index];\n\n            let terminal_row_id = $(e.target).data(\"row-id\");\n\n            $(`input#terminal-input-${terminal_row_id}`).val(prev_command);\n            $(`#show-${terminal_row_id}`).text(prev_command);\n\n            this.commands_index--;\n        }\n        else if (e.key === \"ArrowDown\") {\n            let prev_command;\n\n            if (this.commands_index >= this.prev_commands.length) return;\n            if (this.commands_index <= -1) this.commands_index = 0;\n\n            if (this.commands_index === this.prev_commands.length) prev_command = \"\";\n            else prev_command = this.prev_commands[this.commands_index];\n\n            let terminal_row_id = $(e.target).data(\"row-id\");\n\n            $(`input#terminal-input-${terminal_row_id}`).val(prev_command);\n            $(`#show-${terminal_row_id}`).text(prev_command);\n\n            this.commands_index++;\n        }\n    }\n\n    childDirectories = (parent) => {\n        let files = [];\n        files.push(`<div class=\"flex justify-start flex-wrap\">`)\n        this.child_directories[parent].forEach(file => {\n            files.push(\n                `<span class=\"font-bold mr-2 text-ubt-blue\">'${file}'</span>`\n            )\n        });\n        files.push(`</div>`)\n        return files;\n    }\n\n    closeTerminal = () => {\n        $(\"#close-terminal\").trigger('click');\n    }\n\n    handleCommands = (command, rowId) => {\n        let words = command.split(' ');\n        let main = words[0];\n        words.shift()\n        let result = \"\";\n        let rest = words.join(\" \");\n        rest = rest.trim();\n        switch (main) {\n            case \"cd\":\n                if (words.length === 0 || rest === \"\") {\n                    this.current_directory = \"~\";\n                    this.curr_dir_name = \"root\"\n                    break;\n                }\n                if (words.length > 1) {\n                    result = \"too many arguments, arguments must me <1.\";\n                    break;\n                }\n\n                if (rest === \"personal-documents\") {\n                    result = `bash /${this.curr_dir_name} : Permission denied 😏`;\n                    break;\n                }\n\n                if (this.child_directories[this.curr_dir_name].includes(rest)) {\n                    this.current_directory += \"/\" + rest;\n                    this.curr_dir_name = rest;\n                }\n                else if (rest === \"..\" || rest === \"../\") {\n                    result = \"Type 'cd' to go back 😅\";\n                    break;\n                }\n                else {\n                    result = `bash: cd: ${words}: No such file or directory`;\n                }\n                break;\n            case \"ls\":\n                let target = words[0];\n                if (target === \"\" || target === undefined || target === null) target = this.curr_dir_name;\n\n                if (words.length > 1) {\n                    result = \"too many arguments, arguments must me <1.\";\n                    break;\n                }\n                if (target in this.child_directories) {\n                    result = this.childDirectories(target).join(\"\");\n                }\n                else if (target === \"personal-documents\") {\n                    result = \"Nope! 🙃\";\n                    break;\n                }\n                else {\n                    result = `ls: cannot access '${words}': No such file or directory                    `;\n                }\n                break;\n            case \"echo\":\n                result = words.join(\" \");\n                break;\n            case \"clear\":\n                this.reStartTerminal();\n                return;\n            case \"exit\":\n                this.closeTerminal();\n                return;\n            case \"sudo\":\n\n                ReactGA.event({\n                    category: \"Sudo Access\",\n                    action: \"lol\",\n                });\n\n                result = \"<img class=' w-2/5' src='./images/memes/used-sudo-command.jpg' />\";\n                break;\n            default:\n                result = \"Command '\" + main + \"' not found, or not yet implemented.<br>Available Commands: [ cd, ls, echo, clear, exit ]\";\n        }\n        document.getElementById(`row-result-${rowId}`).innerHTML = result;\n        this.appendTerminalRow();\n    }\n\n    render() {\n        return (\n            <div className=\"h-full w-full bg-ub-drk-abrgn text-white text-sm font-bold\" id=\"terminal-body\">\n                {\n                    this.state.terminal\n                }\n            </div>\n        )\n    }\n}\n\nexport default Terminal\n\nexport const displayTerminal = () => {\n    return <Terminal> </Terminal>;\n}"]},"metadata":{},"sourceType":"module"}