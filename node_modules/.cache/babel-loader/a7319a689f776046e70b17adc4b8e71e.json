{"ast":null,"code":"import { Component } from 'react';\nexport default class Clock extends Component {\n  constructor() {\n    super();\n    this.month_list = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    this.day_list = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    this.state = {\n      hour_12: true,\n      current_time: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.update_time = setInterval(() => {\n      this.setState({\n        current_time: new Date()\n      });\n    }, 1 * 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.update_time);\n  }\n\n  render() {\n    const {\n      current_time\n    } = this.state;\n    let day = this.day_list[current_time.getDay()];\n    let hour = current_time.getHours();\n    let minute = current_time.getMinutes();\n    let month = this.month_list[current_time.getMonth()];\n    let date = current_time.getDate().toLocaleString();\n    let meridiem = hour < 12 ? \"AM\" : \"PM\";\n\n    if (minute.toLocaleString().length === 1) {\n      minute = \"0\" + minute;\n    }\n\n    if (this.state.hour_12 && hour > 12) hour -= 12;\n    let display_time;\n\n    if (this.props.onlyTime !== undefined && this.props.onlyTime !== null) {\n      display_time = hour + \":\" + minute + \" \" + meridiem;\n    } else if (this.props.onlyDay !== undefined && this.props.onlyDay !== null) {\n      display_time = day + \" \" + month + \" \" + date;\n    } else display_time = day + \" \" + month + \" \" + date + \" \" + hour + \":\" + minute + \" \" + meridiem;\n\n    return display_time;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/91809/Desktop/vivek9patel.github.io-master/vivek9patel.github.io-master/src/components/util components/clock.js"],"names":["Component","Clock","constructor","month_list","day_list","state","hour_12","current_time","Date","componentDidMount","update_time","setInterval","setState","componentWillUnmount","clearInterval","render","day","getDay","hour","getHours","minute","getMinutes","month","getMonth","date","getDate","toLocaleString","meridiem","length","display_time","props","onlyTime","undefined","onlyDay"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AACzCE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,UAAL,GAAkB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAlB;AACA,SAAKC,QAAL,GAAgB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAhB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,IADA;AAETC,MAAAA,YAAY,EAAE,IAAIC,IAAJ;AAFL,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,WAAL,GAAmBC,WAAW,CAAC,MAAM;AACjC,WAAKC,QAAL,CAAc;AAAEL,QAAAA,YAAY,EAAE,IAAIC,IAAJ;AAAhB,OAAd;AACH,KAF6B,EAE3B,IAAI,IAFuB,CAA9B;AAGH;;AAEDK,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKJ,WAAN,CAAb;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAER,MAAAA;AAAF,QAAmB,KAAKF,KAA9B;AAEA,QAAIW,GAAG,GAAG,KAAKZ,QAAL,CAAcG,YAAY,CAACU,MAAb,EAAd,CAAV;AACA,QAAIC,IAAI,GAAGX,YAAY,CAACY,QAAb,EAAX;AACA,QAAIC,MAAM,GAAGb,YAAY,CAACc,UAAb,EAAb;AACA,QAAIC,KAAK,GAAG,KAAKnB,UAAL,CAAgBI,YAAY,CAACgB,QAAb,EAAhB,CAAZ;AACA,QAAIC,IAAI,GAAGjB,YAAY,CAACkB,OAAb,GAAuBC,cAAvB,EAAX;AACA,QAAIC,QAAQ,GAAIT,IAAI,GAAG,EAAP,GAAY,IAAZ,GAAmB,IAAnC;;AAEA,QAAIE,MAAM,CAACM,cAAP,GAAwBE,MAAxB,KAAmC,CAAvC,EAA0C;AACtCR,MAAAA,MAAM,GAAG,MAAMA,MAAf;AACH;;AAED,QAAI,KAAKf,KAAL,CAAWC,OAAX,IAAsBY,IAAI,GAAG,EAAjC,EAAqCA,IAAI,IAAI,EAAR;AAErC,QAAIW,YAAJ;;AACA,QAAI,KAAKC,KAAL,CAAWC,QAAX,KAAwBC,SAAxB,IAAqC,KAAKF,KAAL,CAAWC,QAAX,KAAwB,IAAjE,EAAuE;AACnEF,MAAAA,YAAY,GAAGX,IAAI,GAAG,GAAP,GAAaE,MAAb,GAAsB,GAAtB,GAA4BO,QAA3C;AACH,KAFD,MAGK,IAAI,KAAKG,KAAL,CAAWG,OAAX,KAAuBD,SAAvB,IAAoC,KAAKF,KAAL,CAAWG,OAAX,KAAuB,IAA/D,EAAqE;AACtEJ,MAAAA,YAAY,GAAGb,GAAG,GAAG,GAAN,GAAYM,KAAZ,GAAoB,GAApB,GAA0BE,IAAzC;AACH,KAFI,MAGAK,YAAY,GAAGb,GAAG,GAAG,GAAN,GAAYM,KAAZ,GAAoB,GAApB,GAA0BE,IAA1B,GAAiC,GAAjC,GAAuCN,IAAvC,GAA8C,GAA9C,GAAoDE,MAApD,GAA6D,GAA7D,GAAmEO,QAAlF;;AACL,WAAOE,YAAP;AACH;;AA9CwC","sourcesContent":["import { Component } from 'react'\n\nexport default class Clock extends Component {\n    constructor() {\n        super();\n        this.month_list = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        this.day_list = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        this.state = {\n            hour_12: true,\n            current_time: new Date()\n        };\n    }\n\n    componentDidMount() {\n        this.update_time = setInterval(() => {\n            this.setState({ current_time: new Date() });\n        }, 1 * 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.update_time);\n    }\n\n    render() {\n        const { current_time } = this.state;\n\n        let day = this.day_list[current_time.getDay()];\n        let hour = current_time.getHours();\n        let minute = current_time.getMinutes();\n        let month = this.month_list[current_time.getMonth()];\n        let date = current_time.getDate().toLocaleString();\n        let meridiem = (hour < 12 ? \"AM\" : \"PM\");\n\n        if (minute.toLocaleString().length === 1) {\n            minute = \"0\" + minute\n        }\n\n        if (this.state.hour_12 && hour > 12) hour -= 12;\n\n        let display_time;\n        if (this.props.onlyTime !== undefined && this.props.onlyTime !== null) {\n            display_time = hour + \":\" + minute + \" \" + meridiem;\n        }\n        else if (this.props.onlyDay !== undefined && this.props.onlyDay !== null) {\n            display_time = day + \" \" + month + \" \" + date;\n        }\n        else display_time = day + \" \" + month + \" \" + date + \" \" + hour + \":\" + minute + \" \" + meridiem;\n        return display_time;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}